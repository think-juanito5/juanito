import { type Static, Type } from '@sinclair/typebox'

export type MetaType = Static<typeof metaTypeSchema>
export const metaTypeSchema = Type.Union([
  Type.Literal('additionalInfo'),
  Type.Literal('fileTemplate'),
  Type.Literal('matterName'),
  Type.Literal('professionalFees'),
  Type.Literal('templateMatterId'),
  Type.Literal('testMode'),
  Type.Literal('filenote'),
  Type.Literal('actionType'),
  Type.Literal('participantIds'),
  Type.Literal('onlineConversionType'),
  Type.Literal('createdByName'),
  Type.Literal('createdByEmail'),
  Type.Literal('actionstepTaskId'),
  Type.Literal('dataverseGuid'),
  Type.Literal('teamsNotifyEnabled'),
  Type.Literal('pipedriveFileNotesEnabled'),
  Type.Literal('conveyancingType'),
  Type.Literal('clientParticipantId'),
  Type.Literal('assignedToParticipantId'),
  Type.Literal('personId'),
  Type.Literal('stepName'),
  Type.Literal('unsubscribeEmail'),
  Type.Literal('unsubscribeOption'),
  Type.Literal('manifest'),
  Type.Literal('agentId'),
  Type.Literal('webhookPayload'),
  Type.Literal('validatedAddress'),
  Type.Literal('sdsFilenotes'),
  Type.Literal('paymentDetails'),
])

export const AllMetaTypes: Array<MetaType> = [
  'additionalInfo',
  'fileTemplate',
  'matterName',
  'professionalFees',
  'templateMatterId',
  'testMode',
  'filenote',
  'actionType',
  'participantIds',
  'onlineConversionType',
  'createdByName',
  'createdByEmail',
  'actionstepTaskId',
  'dataverseGuid',
  'teamsNotifyEnabled',
  'pipedriveFileNotesEnabled',
  'conveyancingType',
  'clientParticipantId',
  'assignedToParticipantId',
  'personId',
  'stepName',
  'unsubscribeEmail',
  'unsubscribeOption',
  'manifest',
  'agentId',
  'webhookPayload',
  'validatedAddress',
  'sdsFilenotes',
  'paymentDetails',
]

export type Meta = Static<typeof metaSchema>
export const metaSchema = Type.Object({
  key: Type.String(),
  value: Type.String(),
})
